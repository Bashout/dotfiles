#!/usr/bin/perl

# Whitespace & Text Fixer
# -----------------------
#
# Does these things:
# * Remove trailing whitespace
# * TODO Add missing new line characters at EOF
# * TODO Convert tabs to spaces (and vice versa)
# * TODO Alignment (replace vim-lion)

use strict;
use warnings;
use Getopt::Std;
use File::Copy qw(copy move);


# Parameters:
# -t | remove trailing whitespace
# -b | convert tabs to spaces (need to know how many spaces to tab characters)
# -B | convert spaces to tabs
# -n | add missing new line char to EOF
# -l | list issues with file(s)
# -i | edit files in place (TODO add backup option, like in 'sed')
# -u | print usage information
# -h | print help

our($opt_u, $opt_t, $opt_i);
getopts("uti");

if ($opt_u) {
    printf "usage: %s [-tui] [file ...]\n", "$0";
    exit 1;
}

if (@ARGV) {
    foreach (@ARGV) {
        # Use file list
        my $file = $_;

        if (! -e -f -T $file) {
            print(STDERR "wtf: \"$file\" is not a valid file\n");
            next;
        }

        open(my $in, '<', "$file") or die "wtf: unable to read from \"$file\"";

        if ($opt_i) {
            # Write to file
            open(my $out, '>', "$file.wtf_tmp")
                or die "wtf: unable to write to \"$file\": $!";
            my $mode = (stat $file)[2];
            copy($file, "$file.wtf_tmp");
            while (<$in>) {
                main($_);
                print($out $_);
            }
            close($out);
            move("$file.wtf_tmp", $file);
            chmod($mode, $file);
        } else {
            while (<$in>) {
                main($_);
                print(STDOUT $_);
            }
        }
        close($in);
    }
} else {
    # Use pipeline
    while (<>) {
        main($_);
        print STDOUT "$_";
    }
}

sub main {
    # Trim trailing whitespace
    if ($opt_t) {
        s/\h+$//;
    }
}
