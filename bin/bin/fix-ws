#!/usr/bin/perl

# Whitespace Fixer
# ----------------
#
# Does these things:
# * Remove trailing whitespace
# * TODO Add missing new line characters at EOF
# * TODO Convert tabs to spaces (and vice versa)
# * TODO Respond to VCS in use to create file list
# * TODO Provide a list of file wildcards to ignore

use strict;
use warnings;
use Getopt::Std;
use File::Find;
use File::Copy qw(copy);


# Parameters:
# * t - remove trailing whitespace
# * b - convert tabs to spaces (need to know how many spaces to tab characters)
# * B - convert spaces to tabs
# * n - add missing new line char to EOF
# * l - list issues with file(s)
# * u - print usage information
# * h - print help

our($opt_u, $opt_t);
getopts("ut");

# Check that all user given files exist
foreach (@ARGV) {
    if (! -f $_) {
        die "Error: \"$_\" is not a valid file\n";
    }
}

my @file_list = ();

if (@ARGV) {
    @file_list = @ARGV;
} else {
    # Get Version Control System
    my $vcs = `vcs-branch -v`;
    if ($? != 0) { die $? }

    # TODO use VCS to collect list of files
    # else, return error message to user
    # TODO remove ignored files from the list
}


# TODO ignore files (also allow reading from an ignore file). Use: File::Find
# my @ignored_files = ('.git/*', '*.jpg', '*.png', '*.svg', '*.rsa', '*.asc');
# foreach (@ignored_files) {
#     print(glob($_));
# }


if ($opt_u) {
    printf "usage: %s [-tu] [file ...]\n", "$0";
    exit 1;
}

sub remove_trailing_whitespace {
    my @files = @_;
    foreach (@files) {
        my $file = $_;
        copy($file, "$file.new");

        open(my $in,  '<', "$file.new") or die "Can't read file \"$file\": $!";
        open(my $out, '>', "$file")     or die "Can't write to \"$file\": $!";

        while (<$in>) {
            s/\h+$//;
            print $out $_;
        }

        close($out);
        unlink "$file.new"
    }
}

if ($opt_t) {
    remove_trailing_whitespace(@file_list);
}
